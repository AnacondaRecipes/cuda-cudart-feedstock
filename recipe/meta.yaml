{% set name = "cuda-cudart" %}
{% set version = "12.3.101" %}
{% set cuda_version = "12.3" %}
{% set platform = "linux-x86_64" %}  # [linux64]
{% set platform = "linux-ppc64le" %}  # [ppc64le]
{% set platform = "linux-sbsa" %}  # [aarch64]
{% set platform = "windows-x86_64" %}  # [win]
{% set target_name = "x86_64-linux" %}  # [linux64]
{% set target_name = "ppc64le-linux" %}  # [ppc64le]
{% set target_name = "sbsa-linux" %}  # [aarch64]
{% set target_name = "x64" %}  # [win]
{% set extension = "tar.xz" %}  # [not win]
{% set extension = "zip" %}  # [win]

package:
  name: cuda-cudart-split
  version: {{ version }}

source:
  url: https://developer.download.nvidia.com/compute/cuda/redist/cuda_cudart/{{ platform }}/cuda_cudart-{{ platform }}-{{ version }}-archive.{{ extension }}
  sha256: e37d478d1e7a10490d55fb87a5ef379a18c648f3010e1d3687c4298ddc3e9e19  # [linux64]
  sha256: 23f6ef558bb954dea3ef5b378c3ad28e1da93080890bd8bf1a18a75ae2ee605d  # [ppc64le]
  sha256: 131e62c60ba979f6870687db99a7537482f6df445915789d2a4799dc4e898b66  # [aarch64]
  sha256: 310a71bc9c92d6e61eeddf3489cc195519665fbfaca16c618b03da0ac5ea9f7d  # [win]

build:
  number: 0
  #skip: true  # [osx or (linux and s390x)]
  skip: true # [not win]

outputs:
  - name: cuda-cudart_{{ target_platform }}
    build:
      noarch: generic
      binary_relocation: false
    files:                                         # [linux]
      - targets/{{ target_name }}/lib/libcu*.so.*  # [linux]
      # Windows DLLs are not needed at compile time
    requirements:
      build:
        - {{ compiler("c") }}
        - {{ compiler("cxx") }}
        #- arm-variant * {{ arm_variant_type }}  # [aarch64]
        - sysroot_{{ target_platform }} {{ conda_glibc_ver }}.*    # [linux]
        - patchelf <0.18.0                      # [linux]
      host:
        - cuda-version {{ cuda_version }}
      run:
        - {{ pin_compatible("cuda-version", max_pin="x.x") }}
      run_constrained:
        - arm-variant * {{ arm_variant_type }}  # [aarch64]
    test:
      commands:
        - test -L $PREFIX/targets/{{ target_name }}/lib/libcudart.so.{{ version.split(".")[0] }}  # [linux]
        - test -f $PREFIX/targets/{{ target_name }}/lib/libcudart.so.{{ version }}                # [linux]
        - if exist %LIBRARY_BIN%\cudart64_{{ version.split(".")[0] }}.dll exit 1                  # [win]
    about:
      home: https://developer.nvidia.com/cuda-toolkit
      license_file: LICENSE
      license: LicenseRef-NVIDIA-End-User-License-Agreement
      license_url: https://docs.nvidia.com/cuda/eula/index.html
      summary: CUDA Runtime architecture dependent libraries
      description: |
        CUDA Runtime architecture dependent libraries
      doc_url: https://docs.nvidia.com/cuda/index.html

  - name: cuda-cudart
    build:
      binary_relocation: false
      missing_dso_whitelist:                             # [win]
        - "*/api-ms-win-core-libraryloader-*.dll"        # [win]
        - "*/api-ms-win-security-systemfunctions-*.dll"  # [win]
    files:
      - lib/libcu*.so.*                            # [linux]
      - Library\bin\cudart*.dll                    # [win]
    requirements:
      build:
        - {{ compiler("c") }}
        - {{ compiler("cxx") }}
        #- arm-variant * {{ arm_variant_type }}  # [aarch64]
        - sysroot_{{ target_platform }} {{ conda_glibc_ver }}.*    # [linux]
      host:
        - cuda-version {{ cuda_version }}
        - {{ pin_subpackage("cuda-cudart_" + target_platform, exact=True) }}
      run:
        - {{ pin_compatible("cuda-version", max_pin="x.x") }}
        - {{ pin_subpackage("cuda-cudart_" + target_platform, exact=True) }}
      run_constrained:
        - arm-variant * {{ arm_variant_type }}  # [aarch64]
    test:
      # requires:
      #   - patchelf  # [linux]
      # files:
      #   - test-rpath.sh
      commands:
        - test -L $PREFIX/lib/libcudart.so.{{ version.split(".")[0] }}                            # [linux]
        - test -L $PREFIX/lib/libcudart.so.{{ version }}                                          # [linux]
        - test -L $PREFIX/targets/{{ target_name }}/lib/libcudart.so.{{ version.split(".")[0] }}  # [linux]
        - test -f $PREFIX/targets/{{ target_name }}/lib/libcudart.so.{{ version }}                # [linux]
        # - bash test-rpath.sh                                                                      # [linux]
        - if not exist %LIBRARY_BIN%\cudart64_{{ version.split(".")[0] }}.dll exit 1              # [win]

    about:
      home: https://developer.nvidia.com/cuda-toolkit
      license_file: LICENSE
      license: LicenseRef-NVIDIA-End-User-License-Agreement
      license_url: https://docs.nvidia.com/cuda/eula/index.html
      summary: CUDA Runtime Native Libraries
      description: |
        CUDA Runtime Native Libraries
      doc_url: https://docs.nvidia.com/cuda/index.html

  - name: cuda-cudart-dev
    build:
      run_exports:
        - {{ pin_subpackage("cuda-cudart", max_pin="x") }}
    files:             # [linux]
      - lib/libcu*.so  # [linux]
      - lib/pkgconfig  # [linux]
    requirements:
      build:
        - {{ compiler("c") }}
        - {{ compiler("cxx") }}
        #- arm-variant * {{ arm_variant_type }}  # [aarch64]
        - sysroot_{{ target_platform }} {{ conda_glibc_ver }}.*    # [linux]
      host:
        - cuda-version {{ cuda_version }}
      run:
        - {{ pin_compatible("cuda-version", max_pin="x.x") }}
        - {{ pin_subpackage("cuda-cudart", exact=True) }}
        - {{ pin_subpackage("cuda-cudart-dev_" + target_platform, exact=True) }}
        - {{ pin_subpackage("cuda-cudart-static", exact=True) }}
      run_constrained:
        - arm-variant * {{ arm_variant_type }}  # [aarch64]
    test:
      commands:
        - test -L $PREFIX/lib/libcudart.so           # [linux]
        - test -f $PREFIX/lib/pkgconfig/cuda-*.pc    # [linux]
        - test -f $PREFIX/lib/pkgconfig/cudart-*.pc  # [linux]
    about:
      home: https://developer.nvidia.com/cuda-toolkit
      license_file: LICENSE
      license: LicenseRef-NVIDIA-End-User-License-Agreement
      license_url: https://docs.nvidia.com/cuda/eula/index.html
      summary: CUDA Runtime Native Libraries
      description: |
        CUDA Runtime Native Libraries
      doc_url: https://docs.nvidia.com/cuda/index.html

  - name: cuda-cudart-dev_{{ target_platform }}
    build:
      noarch: generic
      run_exports:
        - {{ pin_subpackage("cuda-cudart", max_pin="x") }}
    files:
      - targets/{{ target_name }}/include                               # [linux]
      - targets/{{ target_name }}/lib/*.so                              # [linux]
      - Library\include                                                 # [win]
      - Library\lib\cuda.lib                                            # [win]
      - Library\lib\cudadevrt.lib                                       # [win]
      - Library\lib\cudart.lib                                          # [win]
    requirements:
      build:
        - {{ compiler("c") }}
        - {{ compiler("cxx") }}
        #- arm-variant * {{ arm_variant_type }}  # [aarch64]
        - sysroot_{{ target_platform }} {{ conda_glibc_ver }}.*    # [linux]
      host:
        - cuda-version {{ cuda_version }}
      run:
        - {{ pin_compatible("cuda-version", max_pin="x.x") }}
        - cuda-cudart-static_{{ target_platform }}
        - cuda-cccl_{{ target_platform }}
        - cuda-cudart_{{ target_platform }}
      run_constrained:
        - arm-variant * {{ arm_variant_type }}  # [aarch64]
    test:
      commands:
        - test -f $PREFIX/targets/{{ target_name }}/include/cuda.h                              # [linux]
        - test -f $PREFIX/targets/{{ target_name }}/include/cuda_runtime.h                      # [linux]
        - test -f $PREFIX/targets/{{ target_name }}/include/cuda_runtime_api.h                  # [linux]
        - test -f $PREFIX/targets/{{ target_name }}/include/cooperative_groups/memcpy_async.h   # [linux]
        - test -f $PREFIX/targets/{{ target_name }}/include/cooperative_groups/details/async.h  # [linux]
        - test -L $PREFIX/targets/{{ target_name }}/lib/libcudart.so                            # [linux]
        - if not exist %LIBRARY_INC%\cuda.h exit 1                                              # [win]
        - if not exist %LIBRARY_INC%\cuda_runtime.h exit 1                                      # [win]
        - if not exist %LIBRARY_INC%\cuda_runtime_api.h exit 1                                  # [win]
        - if not exist %LIBRARY_LIB%\cuda.lib exit 1                                            # [win]
        - if not exist %LIBRARY_LIB%\cudadevrt.lib exit 1                                       # [win]
        - if not exist %LIBRARY_LIB%\cudart.lib exit 1                                          # [win]
    about:
      home: https://developer.nvidia.com/cuda-toolkit
      license_file: LICENSE
      license: LicenseRef-NVIDIA-End-User-License-Agreement
      license_url: https://docs.nvidia.com/cuda/eula/index.html
      summary: CUDA Runtime Native Libraries
      description: |
        CUDA Runtime Native Libraries
      doc_url: https://docs.nvidia.com/cuda/index.html

  - name: cuda-cudart-static
    files:       # [linux]
      - lib/*.a  # [linux]
    requirements:
      build:
        - {{ compiler("c") }}
        - {{ compiler("cxx") }}
        #- arm-variant * {{ arm_variant_type }}  # [aarch64]
        - sysroot_{{ target_platform }} {{ conda_glibc_ver }}.*    # [linux]
      host:
        - cuda-version {{ cuda_version }}
      run:
        - {{ pin_compatible("cuda-version", max_pin="x.x") }}
        - {{ pin_subpackage("cuda-cudart-static_" + target_platform, exact=True) }}
      run_constrained:
        - arm-variant * {{ arm_variant_type }}  # [aarch64]
    test:
      commands:
        - test -L $PREFIX/lib/libcudart_static.a  # [linux]
        - test -L $PREFIX/lib/libcudadevrt.a      # [linux]
        - test -L $PREFIX/lib/libculibos.a        # [linux]
    about:
      home: https://developer.nvidia.com/cuda-toolkit
      license_file: LICENSE
      license: LicenseRef-NVIDIA-End-User-License-Agreement
      license_url: https://docs.nvidia.com/cuda/eula/index.html
      summary: CUDA Runtime Native Libraries
      description: |
        CUDA Runtime Native Libraries
      doc_url: https://docs.nvidia.com/cuda/index.html

  - name: cuda-cudart-static_{{ target_platform }}
    build:
      noarch: generic
    files:
      - targets/{{ target_name }}/lib/*.a  # [linux]
      - Library\lib\cudart_static.lib      # [win]
    requirements:
      build:
        - {{ compiler("c") }}
        - {{ compiler("cxx") }}
        #- arm-variant * {{ arm_variant_type }}  # [aarch64]
        - sysroot_{{ target_platform }} {{ conda_glibc_ver }}.*    # [linux]
      host:
        - cuda-version {{ cuda_version }}
      run:
        - {{ pin_compatible("cuda-version", max_pin="x.x") }}
      run_constrained:
        - arm-variant * {{ arm_variant_type }}  # [aarch64]
    test:
      commands:
        - test -f $PREFIX/targets/{{ target_name }}/lib/libcudart_static.a  # [linux]
        - test -f $PREFIX/targets/{{ target_name }}/lib/libcudadevrt.a      # [linux]
        - test -f $PREFIX/targets/{{ target_name }}/lib/libculibos.a        # [linux]
        - if not exist %LIBRARY_LIB%\cudart_static.lib exit 1               # [win]
    about:
      home: https://developer.nvidia.com/cuda-toolkit
      license_file: LICENSE
      license: LicenseRef-NVIDIA-End-User-License-Agreement
      license_url: https://docs.nvidia.com/cuda/eula/index.html
      summary: CUDA Runtime Native Libraries
      description: |
        CUDA Runtime Native Libraries
      doc_url: https://docs.nvidia.com/cuda/index.html

  - name: cuda-driver-dev
    build:
      skip: True  # [not linux]
    files:
      - lib/stubs/libcuda.so
    requirements:
      build:
        - {{ compiler("c") }}
        - {{ compiler("cxx") }}
        #- arm-variant * {{ arm_variant_type }}  # [aarch64]
        - sysroot_{{ target_platform }} {{ conda_glibc_ver }}.*    # [linux]
      host:
        - cuda-version {{ cuda_version }}
      run:
        - {{ pin_compatible("cuda-version", max_pin="x.x") }}
        - cuda-driver-dev_{{ target_platform }}
      run_constrained:
        - arm-variant * {{ arm_variant_type }}  # [aarch64]
    test:
      commands:
        - test -L $PREFIX/lib/stubs/libcuda.so
    about:
      home: https://developer.nvidia.com/cuda-toolkit
      license_file: LICENSE
      license: LicenseRef-NVIDIA-End-User-License-Agreement
      license_url: https://docs.nvidia.com/cuda/eula/index.html
      summary: CUDA Runtime Native Libraries
      description: |
        CUDA Runtime Native Libraries
      doc_url: https://docs.nvidia.com/cuda/index.html

  - name: cuda-driver-dev_{{ target_platform }}
    build:
      skip: True  # [not linux]
      noarch: generic
      binary_relocation: false
    files:
      - targets/{{ target_name }}/lib/stubs/libcuda.so
    requirements:
      build:
        - {{ compiler("c") }}
        - {{ compiler("cxx") }}
        #- arm-variant * {{ arm_variant_type }}  # [aarch64]
        - sysroot_{{ target_platform }} {{ conda_glibc_ver }}.*    # [linux]
      host:
        - cuda-version {{ cuda_version }}
      run:
        - {{ pin_compatible("cuda-version", max_pin="x.x") }}
      run_constrained:
        - arm-variant * {{ arm_variant_type }}  # [aarch64]
    test:
      commands:
        - test -f $PREFIX/targets/{{ target_name }}/lib/stubs/libcuda.so
    about:
      home: https://developer.nvidia.com/cuda-toolkit
      license_file: LICENSE
      license: LicenseRef-NVIDIA-End-User-License-Agreement
      license_url: https://docs.nvidia.com/cuda/eula/index.html
      summary: CUDA Runtime Native Libraries
      description: |
        CUDA Runtime Native Libraries
      doc_url: https://docs.nvidia.com/cuda/index.html

about:
  home: https://developer.nvidia.com/cuda-toolkit
  license_file: LICENSE
  license: LicenseRef-NVIDIA-End-User-License-Agreement
  license_url: https://docs.nvidia.com/cuda/eula/index.html
  summary: CUDA Runtime Native Libraries
  description: |
    CUDA Runtime Native Libraries
  doc_url: https://docs.nvidia.com/cuda/index.html

extra:
  feedstock-name: cuda-cudart
  recipe-maintainers:
    - conda-forge/cuda
